package exercise.collections;

import java.util.*;

public class Collections {

    public static void main(String[] args){

        /*
        1. List — упорядоченный список, в котором у каждого элемента есть индекс. Дубликаты значений допускаются.
        Например, последовательность букв в слове: буквы могут повторяться, при этом их порядок важен.

        2. ArrayList - реализован внутри в виде обычного массива.
        Поэтому при вставке элемента в середину, приходится сначала сдвигать на один все элементы после него,
        а уже затем в освободившееся место вставлять новый элемент.
        Зато в нем быстро реализованы взятие и изменение элемента – операции get, set,
        так как в них мы просто обращаемся к соответствующему элементу массива.

        Если собираешься вставлять (или удалять) в середину коллекции много элементов, то лучше использовать LinkedList.
        Во всех остальных случаях – ArrayList.
         */
        List a1 = new ArrayList();
        a1.add("Заря");
        a1.add("Марк");
        a1.add("Айан");

        System.out.println("ArrayList Элементы:");
        System.out.print("\t" + a1);

        /*
        LinkedList -реализован внутри по-другому.
        Он реализован в виде связного списка: набора отдельных элементов,
        каждый из которых хранит ссылку на следующий и предыдущий элементы.
        Чтобы вставить элемент в середину такого списка, достаточно поменять ссылки его будущих соседей.
        А вот чтобы получить элемент с номером 130, нужно пройтись последовательно по всем объектам от 0 до 130.
        Другими словами операции set и get тут реализованы очень медленно.
         */
        List l1 = new LinkedList();
        l1.add("Заря");
        l1.add("Марк");
        l1.add("Айан");

        System.out.println();
        System.out.println(" LinkedList Элементы:");
        System.out.print("\t" + l1);

        /*
        Set — это неупорядоченное множество уникальных элементов.
        Например, мешочек с бочонками для игры в лото: каждый номер от 1 до 90 встречается в нём ровно один раз,
        и заранее неизвестно, в каком порядке бочонки вынут при игре.

        HashSet, подробнее:
        https://skillbox.ru/media/code/gotovimsya_k_sobesedovaniyu_chto_nuzhno_znat_o_kollektsiyakh_v_java/

         */
        Set s1 = new HashSet();
        s1.add("Заря");
        s1.add("Марк");
        s1.add("Айан");

        System.out.println();
        System.out.println(" Set Элементы:");
        System.out.print("\t" + s1);

        /*
        Map состоит из пар «ключ-значение». Ключи уникальны, а значения могут повторяться.
        Порядок элементов не гарантирован. Map позволяет искать объекты (значения) по ключу.
        Пример: стопка карточек с иностранными словами и их значениями.
        Для каждого слова (ключ) на обороте карточки есть вариант перевода (значение),
        а вытаскивать карточки можно в любом порядке.

        HashMap, подробнее:
        https://skillbox.ru/media/code/gotovimsya_k_sobesedovaniyu_chto_nuzhno_znat_o_kollektsiyakh_v_java/
         */

        Map m1 = new HashMap();
        m1.put("Заря", "8");
        m1.put("Марк", "31");
        m1.put("Айан", "12");
        m1.put("Дэйзи", "14");

        System.out.println();
        System.out.println(" Map Элементы:");
        System.out.print("\t" + m1);
    }
}
